name: Publish Docker image

on:
  push:
    branches:
      - main # This workflow triggers on pushes to the 'main' branch

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest # Specifies the runner environment for this job
    permissions:
      packages: write # Required to push Docker images to package registries
      contents: read # Required to check out the repository code
      attestations: write # Required for generating build attestations
      id-token: write # Required for secure token exchange, often used with attestations
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # Action to log into Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Uses a GitHub secret for Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }} # Uses a GitHub secret for Docker Hub password (use an access token!)

      - name: Extract metadata (tags, labels) for Docker
        id: meta # Assigns an ID to this step to reference its outputs
        uses: docker/metadata-action@v5 # Action to extract image metadata from Git context
        with:
          images: alaametawe/my-app # Defines the base image name for tagging

      - name: Build and push Docker image
        id: push # Assigns an ID to this step to reference its outputs (e.g., image digest)
        uses: docker/build-push-action@v5 # Action to build and push the Docker image
        with:
          context: ./my-app # Specifies the build context (where the Dockerfile and source files are)
          file: Dockerfile # Specifies the Dockerfile name relative to the context
          push: true # Set to true to push the built image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Uses tags generated by the metadata action
          labels: ${{ steps.meta.outputs.labels }} # Uses labels generated by the metadata action

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1 # Action to generate a build provenance attestation
        with:
          subject-name: index.docker.io/alaametawe/my-app # The name of the image being attested
          subject-digest: ${{ steps.push.outputs.digest }} # The digest (SHA) of the pushed image from the build step
          push-to-registry: true # Pushes the attestation to the registry

